[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "checkserver",
        "importPath": "hr_backend.views",
        "description": "hr_backend.views",
        "isExtraImport": true,
        "detail": "hr_backend.views",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "FileResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "interns.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "interns.models",
        "description": "interns.models",
        "detail": "interns.models",
        "documentation": {}
    },
    {
        "label": "Interns",
        "importPath": "interns.models",
        "description": "interns.models",
        "isExtraImport": true,
        "detail": "interns.models",
        "documentation": {}
    },
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "pre_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "hr_backend",
        "description": "hr_backend",
        "isExtraImport": true,
        "detail": "hr_backend",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "hr_backend",
        "description": "hr_backend",
        "isExtraImport": true,
        "detail": "hr_backend",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "hr_backend",
        "description": "hr_backend",
        "isExtraImport": true,
        "detail": "hr_backend",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "Nationalities",
        "importPath": "public.models",
        "description": "public.models",
        "isExtraImport": true,
        "detail": "public.models",
        "documentation": {}
    },
    {
        "label": "Nationalities",
        "importPath": "public.models",
        "description": "public.models",
        "isExtraImport": true,
        "detail": "public.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "isExtraImport": true,
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "INTER_PIC_DIR",
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "isExtraImport": true,
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "isExtraImport": true,
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "isExtraImport": true,
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "mimetypes",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mimetypes",
        "description": "mimetypes",
        "detail": "mimetypes",
        "documentation": {}
    },
    {
        "label": "generate_pdf_thumbnail",
        "importPath": "pdf_data.utils",
        "description": "pdf_data.utils",
        "isExtraImport": true,
        "detail": "pdf_data.utils",
        "documentation": {}
    },
    {
        "label": "generate_pdf_thumbnail",
        "importPath": "pdf_data.utils",
        "description": "pdf_data.utils",
        "isExtraImport": true,
        "detail": "pdf_data.utils",
        "documentation": {}
    },
    {
        "label": "fitz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "fitz",
        "description": "fitz",
        "detail": "fitz",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "psutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psutil",
        "description": "psutil",
        "detail": "psutil",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "InternSerializer",
        "importPath": "interns.serializers",
        "description": "interns.serializers",
        "isExtraImport": true,
        "detail": "interns.serializers",
        "documentation": {}
    },
    {
        "label": "MultiPartParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "get_nationality",
        "importPath": "public.views",
        "description": "public.views",
        "isExtraImport": true,
        "detail": "public.views",
        "documentation": {}
    },
    {
        "label": "NationalitySerializer",
        "importPath": "public.serializers",
        "description": "public.serializers",
        "isExtraImport": true,
        "detail": "public.serializers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "hr_backend.asgi",
        "description": "hr_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "hr_backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nCERTIFICATES_DIR = os.path.join(MEDIA_ROOT, \"certificates\")\nINTER_PIC_DIR = os.path.join(MEDIA_ROOT, \"intern_profilePic\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b&n2^ts^2p2mkoy0cd967x*6a^79o1h2&h0z+!!+jn=#+d+6bl\"\n# SECURITY WARNING: don't run with debug turned on in production!",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nCERTIFICATES_DIR = os.path.join(MEDIA_ROOT, \"certificates\")\nINTER_PIC_DIR = os.path.join(MEDIA_ROOT, \"intern_profilePic\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b&n2^ts^2p2mkoy0cd967x*6a^79o1h2&h0z+!!+jn=#+d+6bl\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nCERTIFICATES_DIR = os.path.join(MEDIA_ROOT, \"certificates\")\nINTER_PIC_DIR = os.path.join(MEDIA_ROOT, \"intern_profilePic\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b&n2^ts^2p2mkoy0cd967x*6a^79o1h2&h0z+!!+jn=#+d+6bl\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "CERTIFICATES_DIR",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "CERTIFICATES_DIR = os.path.join(MEDIA_ROOT, \"certificates\")\nINTER_PIC_DIR = os.path.join(MEDIA_ROOT, \"intern_profilePic\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b&n2^ts^2p2mkoy0cd967x*6a^79o1h2&h0z+!!+jn=#+d+6bl\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "INTER_PIC_DIR",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "INTER_PIC_DIR = os.path.join(MEDIA_ROOT, \"intern_profilePic\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-b&n2^ts^2p2mkoy0cd967x*6a^79o1h2&h0z+!!+jn=#+d+6bl\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-b&n2^ts^2p2mkoy0cd967x*6a^79o1h2&h0z+!!+jn=#+d+6bl\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",\n    \"rest_framework_simplejwt\",\n    \"rest_framework_simplejwt.token_blacklist\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "DATE_INPUT_FORMATS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "DATE_INPUT_FORMATS = [\"%d-%m-%Y\"]\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n]",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "ROOT_URLCONF = \"hr_backend.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = False\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",  # Your frontend origin\n    # Add more origins as needed\n]\nWSGI_APPLICATION = \"hr_backend.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",  # Your frontend origin\n    # Add more origins as needed\n]\nWSGI_APPLICATION = \"hr_backend.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = \"hr_backend.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": os.getenv(\"DB_NAME\", default=\"auto_hr_database\"),\n        \"USER\": os.getenv(\"DB_USER\"),\n        \"PASSWORD\": os.getenv(\"DB_PASSWORD\"),\n        \"HOST\": os.getenv(\"DB_HOST\", default=\"localhost\"),",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": os.getenv(\"DB_NAME\", default=\"auto_hr_database\"),\n        \"USER\": os.getenv(\"DB_USER\"),\n        \"PASSWORD\": os.getenv(\"DB_PASSWORD\"),\n        \"HOST\": os.getenv(\"DB_HOST\", default=\"localhost\"),\n        \"PORT\": os.getenv(\"DB_PORT\", default=\"3306\"),\n        \"OPTIONS\": {\n            \"init_command\": \"SET sql_mode='STRICT_TRANS_TABLES'\",  # Activate Strict Mode",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ),\n    \"DEFAULT_PERMISSION_CLASSES\": (\"rest_framework.permissions.IsAuthenticated\",),\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=7),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=30),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": True,\n    \"ALGORITHM\": \"HS256\",\n    \"VERIFYING_KEY\": None,\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"AUTH_HEADER_NAME\": \"HTTP_AUTHORIZATION\",",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Email Settings",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Email Settings\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Email Settings\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Email Settings\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Email Settings\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "EMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "EMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "hr_backend.settings",
        "description": "hr_backend.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "hr_backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "hr_backend.urls",
        "description": "hr_backend.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/\", include(\"interns.urls\")),\n    path(\"api/\", include(\"pdf_data.urls\")),\n    path(\"check_server/\", checkserver),\n    path(\"api/token/\", TokenObtainPairView.as_view(), name=\"token_obtain_pair\"),\n    path(\"api/token/refresh/\", TokenRefreshView.as_view(), name=\"token_refresh\"),\n    path(\"api/\", include(\"public.urls\")),\n]",
        "detail": "hr_backend.urls",
        "documentation": {}
    },
    {
        "label": "checkserver",
        "kind": 2,
        "importPath": "hr_backend.views",
        "description": "hr_backend.views",
        "peekOfCode": "def checkserver(request):\n    return JsonResponse({\"status\": \"ok\"}, status=200)",
        "detail": "hr_backend.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "hr_backend.wsgi",
        "description": "hr_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "hr_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "interns.migrations.0001_initial",
        "description": "interns.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('public', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Interns',\n            fields=[\n                ('intern_code', models.CharField(max_length=25, primary_key=True, serialize=False)),",
        "detail": "interns.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "InternsConfig",
        "kind": 6,
        "importPath": "interns.apps",
        "description": "interns.apps",
        "peekOfCode": "class InternsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'interns'",
        "detail": "interns.apps",
        "documentation": {}
    },
    {
        "label": "Interns",
        "kind": 6,
        "importPath": "interns.models",
        "description": "interns.models",
        "peekOfCode": "class Interns(models.Model):\n    intern_code = models.CharField(primary_key=True, max_length=25)\n    intern_photo = models.ImageField(null=True, blank=True, upload_to=upload_to)\n    full_name = models.CharField(blank=False, max_length=50)\n    dob = models.DateField()\n    job_title = models.CharField(\n        max_length=10,\n        choices=[(\"Intern\", \"Intern\"), (\"Trainee\", \"Trainee\")],\n        default=\"Intern\",\n    )",
        "detail": "interns.models",
        "documentation": {}
    },
    {
        "label": "upload_to",
        "kind": 2,
        "importPath": "interns.models",
        "description": "interns.models",
        "peekOfCode": "def upload_to(instance, filename):\n    ext = filename.split(\".\")[-1]\n    new_filename = f\"{uuid.uuid4()}.{ext}\"\n    return os.path.join(settings.INTER_PIC_DIR, new_filename)\ndef get_default_nationalities():\n    return Nationalities.objects.get(id=92)[0]\nclass Interns(models.Model):\n    intern_code = models.CharField(primary_key=True, max_length=25)\n    intern_photo = models.ImageField(null=True, blank=True, upload_to=upload_to)\n    full_name = models.CharField(blank=False, max_length=50)",
        "detail": "interns.models",
        "documentation": {}
    },
    {
        "label": "get_default_nationalities",
        "kind": 2,
        "importPath": "interns.models",
        "description": "interns.models",
        "peekOfCode": "def get_default_nationalities():\n    return Nationalities.objects.get(id=92)[0]\nclass Interns(models.Model):\n    intern_code = models.CharField(primary_key=True, max_length=25)\n    intern_photo = models.ImageField(null=True, blank=True, upload_to=upload_to)\n    full_name = models.CharField(blank=False, max_length=50)\n    dob = models.DateField()\n    job_title = models.CharField(\n        max_length=10,\n        choices=[(\"Intern\", \"Intern\"), (\"Trainee\", \"Trainee\")],",
        "detail": "interns.models",
        "documentation": {}
    },
    {
        "label": "generate_interncode",
        "kind": 2,
        "importPath": "interns.models",
        "description": "interns.models",
        "peekOfCode": "def generate_interncode(sender, instance, **kwargs):\n    if not instance.intern_code:\n        job_title = instance.job_title\n        prefix = \"IN\" if job_title == \"IN\" else \"TR\"\n        i = 1\n        while True:\n            intern_code = f\"{prefix}-{i:04d}\"\n            if not Interns.objects.filter(intern_code=intern_code).exists():\n                break\n            i += 1",
        "detail": "interns.models",
        "documentation": {}
    },
    {
        "label": "InternSerializer",
        "kind": 6,
        "importPath": "interns.serializers",
        "description": "interns.serializers",
        "peekOfCode": "class InternSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Interns\n        fields = '__all__'\n        read_only_fields = ['intern_code']",
        "detail": "interns.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "interns.urls",
        "description": "interns.urls",
        "peekOfCode": "urlpatterns = [\n    path('intern/', InternView.as_view(), name='intern-create'),\n    path('check_email', check_email),\n    path('get_profile_pic', getProfilePic)\n]",
        "detail": "interns.urls",
        "documentation": {}
    },
    {
        "label": "InternView",
        "kind": 6,
        "importPath": "interns.views",
        "description": "interns.views",
        "peekOfCode": "class InternView(APIView):\n    permission_classes = [permissions.IsAuthenticated]\n    def get(self, request, *args, **kwargs):\n        if \"all\" in request.query_params:\n            all_interns = Interns.objects.all()\n            serializer = InternSerializer(all_interns, many=True)\n            return Response(serializer.data, status=status.HTTP_200_OK)\n        elif \"id\" in request.query_params:\n            intern = get_object_or_404(Interns, pk=request.query_params.get(\"id\"))\n            serializer = InternSerializer(intern)",
        "detail": "interns.views",
        "documentation": {}
    },
    {
        "label": "check_email",
        "kind": 2,
        "importPath": "interns.views",
        "description": "interns.views",
        "peekOfCode": "def check_email(request):\n    email = request.GET.get('email')\n    if email:\n        try:\n            intern = Interns.objects.get(email=email)\n            return JsonResponse({\"status\": \"email found\"}, status=200)\n        except Interns.DoesNotExist:\n            return JsonResponse({\"status\": \"email not found\"}, status=200)\n    else:\n        return JsonResponse({\"status\": \"email parameter missing\"}, status=400)",
        "detail": "interns.views",
        "documentation": {}
    },
    {
        "label": "getProfilePic",
        "kind": 2,
        "importPath": "interns.views",
        "description": "interns.views",
        "peekOfCode": "def getProfilePic(request):\n    id = request.GET.get('id')\n    if not id:\n        return Response({\"detail\": \"ID parameter is missing.\"}, status=status.HTTP_400_BAD_REQUEST)\n    try:\n        intern = Interns.objects.get(intern_code=id)\n    except Interns.DoesNotExist:\n        return Response({\"detail\": \"Intern not found.\"}, status=status.HTTP_404_NOT_FOUND)\n    if not intern.intern_photo:\n        return Response({\"detail\": \"Intern has no photo.\"}, status=status.HTTP_404_NOT_FOUND)",
        "detail": "interns.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pdf_data.migrations.0001_initial",
        "description": "pdf_data.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserPDF',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('user_id', models.CharField(max_length=100)),",
        "detail": "pdf_data.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "PDFConfig",
        "kind": 6,
        "importPath": "pdf_data.apps",
        "description": "pdf_data.apps",
        "peekOfCode": "class PDFConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'pdf_data'",
        "detail": "pdf_data.apps",
        "documentation": {}
    },
    {
        "label": "UserPDF",
        "kind": 6,
        "importPath": "pdf_data.models",
        "description": "pdf_data.models",
        "peekOfCode": "class UserPDF(models.Model):\n    user_id = models.CharField(max_length=100)\n    filename = models.CharField(max_length=100)\n    created_date = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user_id} - {self.filename}\"",
        "detail": "pdf_data.models",
        "documentation": {}
    },
    {
        "label": "PDFUploadSerializer",
        "kind": 6,
        "importPath": "pdf_data.serializers",
        "description": "pdf_data.serializers",
        "peekOfCode": "class PDFUploadSerializer(serializers.Serializer):\n    file = serializers.FileField()\n    user_id = serializers.CharField(max_length=100)\nclass UserPDFSerializer(serializers.ModelSerializer):\n    thumbnail = serializers.SerializerMethodField()\n    class Meta:\n        model = UserPDF\n        fields = \"__all__\"\n    def get_thumbnail(self, obj):\n        request = self.context.get('request')",
        "detail": "pdf_data.serializers",
        "documentation": {}
    },
    {
        "label": "UserPDFSerializer",
        "kind": 6,
        "importPath": "pdf_data.serializers",
        "description": "pdf_data.serializers",
        "peekOfCode": "class UserPDFSerializer(serializers.ModelSerializer):\n    thumbnail = serializers.SerializerMethodField()\n    class Meta:\n        model = UserPDF\n        fields = \"__all__\"\n    def get_thumbnail(self, obj):\n        request = self.context.get('request')\n        if request:\n            return request.build_absolute_uri(\n                reverse('thumbnail', args=[obj.filename])",
        "detail": "pdf_data.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pdf_data.urls",
        "description": "pdf_data.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"retrieve/\", RetrievePDFView.as_view(), name=\"retrieve-pdf\"),\n    path(\"pdfs/list/\", ListUserPDFsView.as_view(), name=\"list_pdfs\"),\n    path(\"pdfs/thumbnail/<filename>/\", ThumbnailView.as_view(), name=\"thumbnail\"),\n    path(\"upload/\", UploadPDFView.as_view(), name=\"upload-pdf\"),\n    path(\"sendemail/\", sendMail, name=\"send-email\"),\n    path(\"sendcertificate/\", sendCertificate, name=\"send-certificate\"),\n    path(\"get_pdfData/\", getPdfUserData, name=\"getPdfData\"),\n]",
        "detail": "pdf_data.urls",
        "documentation": {}
    },
    {
        "label": "generate_pdf_thumbnail",
        "kind": 2,
        "importPath": "pdf_data.utils",
        "description": "pdf_data.utils",
        "peekOfCode": "def generate_pdf_thumbnail(pdf_path, target_size=824 * 580):\n    try:\n        document = fitz.open(pdf_path)\n        page = document.load_page(0)\n        pix = page.get_pixmap(matrix=fitz.Matrix(2, 2)) \n        img = Image.open(io.BytesIO(pix.tobytes(\"png\"))) \n        img_data = compress_image(img, target_size)\n        return img_data\n    except Exception as e:\n        return None",
        "detail": "pdf_data.utils",
        "documentation": {}
    },
    {
        "label": "compress_image",
        "kind": 2,
        "importPath": "pdf_data.utils",
        "description": "pdf_data.utils",
        "peekOfCode": "def compress_image(image, target_size):\n    \"\"\"Compress the image to be less than the target size.\"\"\"\n    img_byte_arr = io.BytesIO()\n    quality = 95\n    image.save(img_byte_arr, format='PNG', quality=quality)\n    while img_byte_arr.tell() > target_size and quality > 10:\n        img_byte_arr = io.BytesIO() \n        quality -= 5 \n        image.save(img_byte_arr, format='PNG', quality=quality)\n    return img_byte_arr.getvalue()",
        "detail": "pdf_data.utils",
        "documentation": {}
    },
    {
        "label": "send_custom_email",
        "kind": 2,
        "importPath": "pdf_data.utils",
        "description": "pdf_data.utils",
        "peekOfCode": "def send_custom_email(to_email, subject, mail, files=None):\n    \"\"\"\n    Sends a custom email with multiple attachments.\n    :param to_email: Recipient's email address\n    :param subject: Subject of the email\n    :param mail: Body of the email\n    :param files: List of file data (bytes) to be attached (optional)\n    \"\"\"\n    try:\n        # Create an EmailMultiAlternatives object",
        "detail": "pdf_data.utils",
        "documentation": {}
    },
    {
        "label": "RetrievePDFView",
        "kind": 6,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "class RetrievePDFView(APIView):\n    permission_classes = [permissions.AllowAny]\n    def get(self, request):\n        filename = request.GET.get(\"filename\")\n        if filename:\n            user_pdf = get_object_or_404(UserPDF, filename=filename)\n            if user_pdf:\n                serializer = UserPDFSerializer(user_pdf)\n                filepath = os.path.join(\n                    settings.CERTIFICATES_DIR, f\"{user_pdf.filename}.pdf\"",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "UploadPDFView",
        "kind": 6,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "class UploadPDFView(APIView):\n    permission_classes = [permissions.AllowAny]\n    parser_classes = [MultiPartParser]\n    def post(self, request, format=None):\n        serializer = PDFUploadSerializer(data=request.data)\n        if serializer.is_valid():\n            file_obj = serializer.validated_data[\"file\"]\n            user_id = serializer.validated_data[\"user_id\"]\n            # Generate a UUID4 filename\n            filename = f\"{uuid.uuid4()}.pdf\"",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "ListUserPDFsView",
        "kind": 6,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "class ListUserPDFsView(APIView):\n    permission_classes = [permissions.IsAuthenticated]\n    def get(self, request, *args, **kwargs):\n        if \"user_id\" in request.query_params:\n            user_pdfs = UserPDF.objects.filter(\n                user_id=request.query_params.get(\"user_id\")\n            )\n            if not user_pdfs.exists():\n                return Response(\n                    {\"detail\": \"No PDFs found for this user.\"},",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "ThumbnailView",
        "kind": 6,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "class ThumbnailView(APIView):\n    permission_classes = [permissions.AllowAny]\n    def get(self, request, filename):\n        if not filename.endswith(\".png\"):\n            return Response(\n                {\"detail\": \"Invalid filename extension. Must end with .png.\"},\n                status=status.HTTP_400_BAD_REQUEST,\n            )\n        filename = str(filename).split(\".\")[0]\n        try:",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "send_email_in_background",
        "kind": 2,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "def send_email_in_background(recipient, subject, mail_body, files):\n    try:\n        mail = EmailMessage(subject, mail_body, settings.EMAIL_HOST_USER, [recipient])\n        if files:\n            for file in files:\n                mail.attach(file.name, file.read(), file.content_type)\n            mail.send()\n            print(f\"Mail sent successfully to {recipient}\")\n        else:\n            mail.send()",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "sendMail",
        "kind": 2,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "def sendMail(request):\n    recipient = request.data.get(\"recipient\")\n    subject = request.data.get(\"subject\")\n    mail_body = request.data.get(\"mail\")\n    files = request.FILES.getlist(\"files\")\n    if recipient and subject and mail_body:\n        threading.Thread(\n            target=send_email_in_background, args=(recipient, subject, mail_body, files)\n        ).start()\n        return JsonResponse(",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "sendCertificate",
        "kind": 2,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "def sendCertificate(request):\n    filename = request.GET.get(\"filename\")\n    print(filename)\n    if filename:\n        try:\n            pdf = UserPDF.objects.get(filename=filename)\n        except UserPDF.DoesNotExist:\n            return JsonResponse(\n                {\"response\": f\"PDF not found\", \"filename\": filename}, status=404\n            )",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "getPdfUserData",
        "kind": 2,
        "importPath": "pdf_data.views",
        "description": "pdf_data.views",
        "peekOfCode": "def getPdfUserData(request):\n    filename = request.GET.get(\"filename\")\n    print(f\"Filename received: {filename}\")\n    if filename:\n        try:\n            pdf = UserPDF.objects.get(filename=filename)\n            print(f\"PDF found: {pdf}\")\n            print(f\"User found: {pdf.user_id}\")\n            try:\n                user = Interns.objects.get(pk=pdf.user_id)",
        "detail": "pdf_data.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "public.migrations.0001_initial",
        "description": "public.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Nationalities',\n            fields=[\n                ('id', models.BigAutoField(primary_key=True, serialize=False)),\n                ('iso', models.CharField(max_length=2)),",
        "detail": "public.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "PublicConfig",
        "kind": 6,
        "importPath": "public.apps",
        "description": "public.apps",
        "peekOfCode": "class PublicConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'public'",
        "detail": "public.apps",
        "documentation": {}
    },
    {
        "label": "Nationalities",
        "kind": 6,
        "importPath": "public.models",
        "description": "public.models",
        "peekOfCode": "class Nationalities(models.Model):\n    id = models.BigAutoField(primary_key=True)\n    iso = models.CharField(max_length=2)\n    name = models.CharField(max_length=80)\n    nicename = models.CharField(max_length=80)\n    country_code = models.CharField(max_length=3, null=True, blank=True)\n    numcode = models.SmallIntegerField(null=True, blank=True)\n    phone_code = models.IntegerField()\n    deleted_at = models.DateTimeField(null=True, blank=True)\n    created_at = models.DateTimeField(null=True, blank=True)",
        "detail": "public.models",
        "documentation": {}
    },
    {
        "label": "NationalitySerializer",
        "kind": 6,
        "importPath": "public.serializers",
        "description": "public.serializers",
        "peekOfCode": "class NationalitySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Nationalities\n        fields = \"__all__\"",
        "detail": "public.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "public.urls",
        "description": "public.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"get_nationality/\", get_nationality, name=\"nationality\"),\n]",
        "detail": "public.urls",
        "documentation": {}
    },
    {
        "label": "get_nationality",
        "kind": 2,
        "importPath": "public.views",
        "description": "public.views",
        "peekOfCode": "def get_nationality(request):\n    name = request.GET.get(\"name\")\n    id = request.GET.get(\"id\")\n    if name:\n        nationalities = Nationalities.objects.filter(\n            Q(nicename__istartswith=name) | Q(iso__iexact=name)\n        )\n        if nationalities.exists():\n            serializer = NationalitySerializer(nationalities, many=True)\n            return Response(serializer.data, status=200)",
        "detail": "public.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hr_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]